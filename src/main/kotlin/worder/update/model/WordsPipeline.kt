/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WordsPipeline.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <31/07/2020, 10:31:00 PM>
 * Version: <10>
 */

package worder.update.model

import javafx.beans.property.ReadOnlyListProperty
import javafx.beans.property.ReadOnlyProperty
import worder.database.model.WorderUpdateDB

/**
 * Contract notes about WordsPipeline use:
 * 1) The next word in pipeline should be issued only when the previous one received its resolution.
 *    Only first WordBlock can be issued without adhering to this requirement.
 * 2) Pipeline should hold the current and the previous WordBlock uncommitted.
 *    The rest should be consistently committed when the last block receives resolution.
 */

interface WordsPipeline {
    val pipelineProperty: ReadOnlyListProperty<WordBlock>
    val pipeline: List<WordBlock>

    val isConsumedProperty: ReadOnlyProperty<Boolean>
    val isConsumed: Boolean

    val isCommittedProperty: ReadOnlyProperty<Boolean>
    val isCommitted: Boolean

    val usedRequesters: List<Requester>
    var selectOrder: WorderUpdateDB.SelectOrder
}
