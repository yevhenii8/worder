/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <CambridgeRequester.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <21/07/2020, 06:42:44 PM>
 * Version: <7>
 */

package worder.update.model.impl.requesters

import worder.core.model.Word
import worder.update.model.DefinitionRequester
import worder.update.model.ExampleRequester
import worder.update.model.Requester
import worder.update.model.impl.WebsiteRequesterDecorator
import worder.update.model.impl.WebsiteRequesterDecorator.Companion.sendGetRequest

class CambridgeRequester private constructor() : DefinitionRequester, ExampleRequester {
    companion object {
        private const val SITE_URL = "https://dictionary.cambridge.org/dictionary/english/"

        private val DEFINITION_PATTERN = Regex("(?<=<div class=\"def ddef_d db\">).*?(?=</div>)")
        private val EXAMPLE_PATTERN = Regex("(?<=<span class=\"eg deg\">).*?(?=</span></div>)")
        private val COMMON_FILTER = Regex("(<.*?>)|(: )")

        val instance: Requester by lazy {
            object : WebsiteRequesterDecorator(CambridgeRequester()), DefinitionRequester, ExampleRequester {}
        }
    }


    override lateinit var definitions: List<String>
        private set

    override lateinit var examples: List<String>
        private set


    override suspend fun requestWord(word: Word) {
        val body = sendGetRequest(SITE_URL + word.name)

        definitions = DEFINITION_PATTERN.findAll(body)
                .map { COMMON_FILTER.replace(it.value, "").trim() }
                .toList()

        examples = EXAMPLE_PATTERN.findAll(body)
                .map { COMMON_FILTER.replace(it.value, "").trim() }
                .toList()
    }
}
