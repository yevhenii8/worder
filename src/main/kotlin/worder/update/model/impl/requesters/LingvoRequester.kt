/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <LingvoRequester.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <03/08/2020, 06:49:09 PM>
 * Version: <11>
 */

package worder.update.model.impl.requesters

import worder.core.model.BareWord
import worder.update.model.Requester
import worder.update.model.TranscriptionRequester
import worder.update.model.TranslationRequester
import worder.update.model.impl.WebsiteRequesterDecorator
import worder.update.model.impl.WebsiteRequesterDecorator.Companion.sendGetRequest

class LingvoRequester private constructor() : TranslationRequester, TranscriptionRequester {
    companion object {
        private const val SITE_URL = "https://www.lingvolive.com/en-us/translate/en-ru/"

        private val TRANSCRIPTION_PATTERN = Regex("(?<=<span class=\"_2EnCi Zf_4w _3bSyz IAnu-\")( data-reactid=\".*?\">)(.*?)(?=</span>)")
        private val TRANSLATION_PATTERN = Regex("(?<=<span class=\"_3zJig\").*?(?=</span>)")
        private val TRANSLATION_FILTER = Regex("(?U)[А-Яа-я ]+")
        private val TRANSLATION_BODY_FILTER = Regex("(?<=<div class=\"_1mexQ Zf_4w _3bSyz\").*?(?=</div><div class=\"(_3dLzG)|(#quote)\")")

        val instance: Requester by lazy {
            object : WebsiteRequesterDecorator(LingvoRequester()), TranslationRequester, TranscriptionRequester {}
        }
    }


    override lateinit var translations: List<String>
        private set

    override lateinit var transcriptions: List<String>
        private set


    override suspend fun requestWord(word: BareWord) {
        val body = sendGetRequest(SITE_URL + word.name.replace(" ", "%20"))

        translations = TRANSLATION_BODY_FILTER.find(body)?.let { matchResult ->
            TRANSLATION_PATTERN.findAll(matchResult.value)
                    .map { it.value.replace(".*>".toRegex(), "").trim() }
                    .filter { str -> TRANSLATION_FILTER.matches(str) }
                    .toList()
        } ?: emptyList()

        transcriptions = TRANSCRIPTION_PATTERN.findAll(body)
                .map { it.groupValues[2].replace("&#x27;", "'") }
                .toList()
    }
}
