/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WooordHuntRequester.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <20/07/2020, 11:23:03 PM>
 * Version: <4>
 */

package worder.update.model.impl.requesters

import worder.core.model.Word
import worder.update.model.Requester
import worder.update.model.TranscriptionRequester
import worder.update.model.TranslationRequester
import worder.update.model.impl.WebsiteRequesterDecorator
import worder.update.model.impl.WebsiteRequesterDecorator.Companion.sendGetRequest

class WooordHuntRequester private constructor() : TranslationRequester, TranscriptionRequester {
    companion object {
        private const val SITE_URL = "https://wooordhunt.ru/word/"

        private val TRANSCRIPTION_PATTERN = Regex("(?<=<span title=\"американская транскрипция слова )(.*?)\" class=\"transcription\"> \\|(.*?)(?=\\|<)")
        private val TRANSLATION_PATTERN = Regex("(?<=<span class=\"t_inline_en\">).*?(?=</span>)")

        val instance: Requester by lazy {
            object : WebsiteRequesterDecorator(WooordHuntRequester()), TranslationRequester, TranscriptionRequester {}
        }
    }


    override lateinit var translations: List<String>
        private set
    override lateinit var transcriptions: List<String>
        private set


    override suspend fun requestWord(word: Word) {
        val body = sendGetRequest(SITE_URL + word.name)

        translations = (TRANSLATION_PATTERN.find(body)?.value ?: "")
                .split(", ")
                .map { it.trim().toLowerCase() }
                .distinct()
                .toList()

        transcriptions = TRANSCRIPTION_PATTERN.findAll(body)
                .map { "[${it.groupValues[2]}]" }
                .distinct()
                .toList()
    }
}
