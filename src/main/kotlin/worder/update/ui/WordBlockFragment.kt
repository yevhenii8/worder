/**
 * Stamp was generated by <StampedFile.kt>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WordBlockFragment.kt>
 * Created: <24/07/2020, 07:45:55 PM>
 * Modified: <24/07/2020, 11:31:26 PM>
 * Version: <62>
 */

package worder.update.ui

import javafx.geometry.Pos
import javafx.scene.Parent
import javafx.scene.layout.Priority
import javafx.scene.paint.Color
import tornadofx.Fragment
import tornadofx.box
import tornadofx.checkbox
import tornadofx.hbox
import tornadofx.hgrow
import tornadofx.label
import tornadofx.paddingVertical
import tornadofx.px
import tornadofx.separator
import tornadofx.style
import tornadofx.tooltip
import tornadofx.vbox
import worder.core.formatted
import worder.core.worderStatusLabel
import worder.database.model.DatabaseWord
import worder.update.model.WordBlock
import java.time.Instant

class WordBlockFragment : Fragment() {
    private val block: WordBlock by param()
    private val word: DatabaseWord = block.originalWord


    override val root: Parent = vbox(spacing = 10) {
        style {
            alignment = Pos.TOP_CENTER
            padding = box(15.px)
            borderRadius += box(15.px)
            borderColor += box(Color.GRAY)
        }

        hbox(20) {
            label(block.id) {
                style {
                    fontSize = 20.px
                    alignment = Pos.TOP_CENTER
                    padding = box(20.px)
                    borderColor += box(Color.GRAY)
                }
            }

            vbox {
                paddingVertical = 10

                label(word.name.toUpperCase()) {
                    style {
                        fontSize = 16.px
                        padding = box(0.px, 0.px, 5.px, 0.px)
                    }

                    tooltip {
                        graphic = hbox {
                            vbox(alignment = Pos.BASELINE_RIGHT) {
                                label("Rate: ")
                                label("Registered: ")
                                label("Last Modified: ")
                                label("Last Rate Modified: ")
                                label("Last Trained: ")
                            }
                            vbox(alignment = Pos.BASELINE_LEFT) {
                                label("${word.rate} %")
                                label(Instant.ofEpochMilli(word.registered).formatted())
                                label(Instant.ofEpochMilli(word.lastModified).formatted())
                                label(Instant.ofEpochMilli(word.lastRateModified).formatted())
                                label(if (word.lastTrained > 0) Instant.ofEpochMilli(word.lastTrained).formatted() else "-")
                            }
                        }
                    }
                }
                label(block.translations.joinToString(", ")).style { fontSize = 12.px }
                label(block.transcriptions.joinToString(", ") { "[$it]" }).style { fontSize = 12.px }
            }

            hbox(alignment = Pos.CENTER_RIGHT) {
                hgrow = Priority.ALWAYS
                vbox(spacing = 5, alignment = Pos.CENTER) {
                    worderStatusLabel(block.statusProperty)
                    label(block.resolutionProperty)
                }
            }
        }

        separator()

        vbox {
            block.definitions.forEachIndexed { index, definition ->
                checkbox("${index + 1}) $definition")
            }
        }

        separator()

        vbox {
            block.examples.forEachIndexed { index, example ->
                checkbox("${index + 1}) $example")
            }
        }
    }
}
