/**
 * Stamp was generated by <StampedFile.kt>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WordsPipelineFragment.kt>
 * Created: <20/07/2020, 06:26:55 PM>
 * Modified: <24/07/2020, 09:44:40 PM>
 * Version: <63>
 */

package worder.update.ui

import javafx.geometry.Pos
import javafx.scene.Parent
import javafx.scene.control.Label
import tornadofx.Fragment
import tornadofx.borderpane
import tornadofx.label
import tornadofx.paddingLeft
import tornadofx.progressindicator
import tornadofx.scrollpane
import tornadofx.vbox
import tornadofx.visibleWhen
import worder.core.observableStats
import worder.database.model.WorderUpdateDB
import worder.update.model.WordsPipeline
import worder.update.model.impl.DefaultWordsPipeline
import worder.update.model.impl.requesters.DevRequester

class WordsPipelineFragment : Fragment() {
    private val database: WorderUpdateDB by param()
    private val pipeline: WordsPipeline = DefaultWordsPipeline.createInstance(
            database = database,
//            usedRequesters = Requester.defaultRequesters,
            usedRequesters = listOf(DevRequester()),
            selectOrder = WorderUpdateDB.SelectOrder.RANDOM
    )


    override val root: Parent = borderpane {
        center =
                vbox(spacing = 30) {
                    pipeline.take(3).forEach {
                        add(find<WordBlockFragment>("block" to it))
                    }
                }

        right = vbox(spacing = 20, alignment = Pos.TOP_CENTER) {
            paddingLeft = 300
            label("Requesters")

            pipeline.usedRequesters.forEach {
                observableStats(observableStats = it.observableStats, hideNullable = true) {
                    (children[0] as Label).graphic = progressindicator {
                        setPrefSize(20.0, 20.0)
                        visibleWhen(it.isBusyProperty)
                    }
                }
            }
        }
    }
}
