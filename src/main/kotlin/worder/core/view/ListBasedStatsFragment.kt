/**
 * Stamp was generated by <StampedFile.kt>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <ListBasedStatsFragment.kt>
 * Created: <10/07/2020, 09:03:31 PM>
 * Modified: <16/07/2020, 11:47:31 PM>
 * Version: <11>
 */

package worder.core.view

import javafx.beans.property.ReadOnlyProperty
import javafx.geometry.Pos
import javafx.scene.layout.Region
import javafx.util.StringConverter
import tornadofx.Fragment
import tornadofx.addClass
import tornadofx.hbox
import tornadofx.label
import tornadofx.paddingBottom
import tornadofx.vbox
import worder.core.styles.WorderDefaultStyles

class ListBasedStatsFragment : Fragment() {
    private val blockTitle: String? by param()
    private val statsProperties: List<ReadOnlyProperty<*>> by param()
    private val nameMutators: Map<String, String.() -> String> by param(emptyMap())
    private val valueMutators: Map<String, Any?.() -> String> by param(emptyMap())


    override val root = vbox {
        if (blockTitle != null)
            label(blockTitle!!) {
                paddingBottom = 15
            }

        hbox {
            vbox(alignment = Pos.BASELINE_RIGHT) {
                statsProperties.forEach {
                    label("${nameMutators[it.name]?.invoke(it.name) ?: it.name}: ")
                }
            }

            vbox(alignment = Pos.BASELINE_LEFT) {
                @Suppress("UNCHECKED_CAST")
                (statsProperties as List<ReadOnlyProperty<Any?>>).forEach {
                    label(
                            observable = it,
                            converter = object : StringConverter<Any?>() {
                                override fun toString(obj: Any?): String = valueMutators[it.name]?.invoke(obj) ?: obj.toString()
                                override fun fromString(string: String?): Any? = throw IllegalStateException()
                            }
                    )
                }
            }
        }

        addClass(WorderDefaultStyles.statsBlock)
    }
}
