/**
 * Stamp was generated by <StampedSourceFile.kt>
 * Last time was modified by <StampedSourceFile.kt>
 *
 * Created: <05/07/2020, 06:50:42 PM>
 * Modified: <05/07/2020, 10:05:03 PM>
 * Version: <15>
 */

package worder.insert.view

import javafx.beans.property.DoubleProperty
import javafx.beans.property.ReadOnlyDoubleProperty
import javafx.beans.property.SimpleDoubleProperty
import javafx.geometry.HorizontalDirection
import javafx.geometry.Orientation
import javafx.geometry.Pos
import javafx.scene.control.ScrollBar
import javafx.scene.control.ScrollPane
import javafx.scene.layout.VBox
import tornadofx.Fragment
import tornadofx.addClass
import tornadofx.hbox
import tornadofx.imageview
import tornadofx.label
import tornadofx.onChange
import tornadofx.paddingLeft
import tornadofx.paddingRight
import tornadofx.paddingTop
import tornadofx.px
import tornadofx.scrollpane
import tornadofx.style
import tornadofx.vbox
import worder.core.styles.WorderDefaultStyles

class InsertUnitsContainerFragment : Fragment() {
    private companion object {
        val allContainersWidths: MutableList<ReadOnlyDoubleProperty> = mutableListOf()
        val commonUnitsContainerWidth: DoubleProperty = SimpleDoubleProperty(0.0)
    }


    private val containerTitle: String by param()
    private val units: VBox by param()
    private val direction: HorizontalDirection by param()


    override val root = vbox(alignment = Pos.BASELINE_CENTER, spacing = 25) {
        minWidthProperty().bind(commonUnitsContainerWidth)

        label(containerTitle) {
            style {
                fontSize = 20.px
            }
        }

        hbox {
            val scrollBar = ScrollBar()
            val emptyContainer = VBox().apply {
                alignment = Pos.CENTER
                spacing = 15.0
                paddingTop = 200
                imageview("/images/empty-box.png")
                label("No units here :(")
            }

            if (direction == HorizontalDirection.LEFT) {
                paddingRight = scrollBar.width
                add(scrollBar)
            }

            val scrollPane = scrollpane {
                addClass(WorderDefaultStyles.insertUnits)

                content = if (units.children.isEmpty()) emptyContainer else units
                alignment = Pos.CENTER
                vbarPolicy = ScrollPane.ScrollBarPolicy.NEVER
                hbarPolicy = ScrollPane.ScrollBarPolicy.NEVER

                scrollBar.apply {
                    isVisible = false
                    orientation = Orientation.VERTICAL

                    minProperty().bind(vminProperty())
                    maxProperty().bind(vmaxProperty())
                    visibleAmountProperty().bind(heightProperty().divide(units.heightProperty()))
                }

                vvalueProperty().bindBidirectional(scrollBar.valueProperty())
                units.setOnScroll {
                    vvalue -= it.deltaY * 0.01
                }

                allContainersWidths.add(widthProperty())
                widthProperty().onChange {
                    commonUnitsContainerWidth.value = allContainersWidths.map { it.value }.max()
                }
            }

            if (direction == HorizontalDirection.RIGHT) {
                paddingLeft = scrollBar.width
                add(scrollBar)
            }

            units.apply {
                setOnMouseExited { scrollBar.isVisible = false }
                setOnMouseEntered { scrollBar.isVisible = scrollBar.visibleAmount < 1.0 }
                children.onChange {
                    when (it.list.size) {
                        0 -> scrollPane.content = emptyContainer
                        1 -> scrollPane.content = this
                    }
                }
            }
        }
    }
}
