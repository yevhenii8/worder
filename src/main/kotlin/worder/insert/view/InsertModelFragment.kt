/**
 * Stamp was generated by <StampedFile.kt>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <InsertModelFragment.kt>
 * Created: <09/07/2020, 10:43:11 PM>
 * Modified: <11/07/2020, 12:17:46 AM>
 * Version: <84>
 */

package worder.insert.view

import javafx.geometry.HorizontalDirection
import javafx.geometry.Insets
import javafx.geometry.Pos
import javafx.scene.Parent
import javafx.scene.layout.BorderPane
import javafx.scene.layout.VBox
import javafx.scene.paint.Color
import org.pdfsam.ui.RingProgressIndicator
import tornadofx.Fragment
import tornadofx.addClass
import tornadofx.borderpane
import tornadofx.label
import tornadofx.onChange
import tornadofx.paddingAll
import tornadofx.px
import tornadofx.separator
import tornadofx.style
import tornadofx.vbox
import worder.core.styles.WorderDefaultStyles
import worder.insert.model.InsertModel
import kotlin.math.roundToInt

class InsertModelFragment : Fragment() {
    private val insertModel: InsertModel by param()
    private val progressIndicator = RingProgressIndicator().apply {
        insertModel.observableStats.totalProcessedProperty.onChange {
            this.progress = ((it.toDouble() / insertModel.observableStats.totalWords) * 100).roundToInt()
        }
    }
    private val uncommittedUnits = find<InsertUnitsContainerFragment>(
            "units" to insertModel.uncommittedUnitsProperty,
            "direction" to HorizontalDirection.LEFT
    ).root
    private val committedUnits = find<InsertUnitsContainerFragment>(
            "units" to insertModel.committedUnitsProperty,
            "direction" to HorizontalDirection.RIGHT
    ).root


    override val root: Parent = borderpane {
        paddingAll = 15


        left = vbox(spacing = 20, alignment = Pos.BASELINE_CENTER) {
            label("UNCOMMITTED UNITS").style { fontSize = 20.px }
            separator()
            add(uncommittedUnits)
        }

        center = vbox(spacing = 20, alignment = Pos.BASELINE_CENTER) {
            style { backgroundColor += Color.ORANGE }

            BorderPane.setMargin(this, Insets(0.0, 10.0, 0.0, 10.0))
            addClass(WorderDefaultStyles.insertModel)
            label("INSERT MODEL")
            separator()

            vbox(spacing = 50) {
                label("hell1")
                label("hell2")
                label("hell3")
            }

//            vbox(spacing = 50) {
//                label("hell")
//                label("hell")
//                label("hell")
//                add(progressIndicator)
//                worderStatusLabel(insertModel.modelStatusProperty)
//                separator()
//                hbox {
//                    add(observableStats(
//                            blockTitle = "Uploaded Data Stats",
//                            statsProperties = listOf(
//                                    insertModel.observableStats.totalWordsProperty,
//                                    insertModel.observableStats.totalValidWordsProperty,
//                                    insertModel.observableStats.totalInvalidWordsProperty
//                            )))
//                }
//                separator()
//                hbox(spacing = 150) {
//                    button("Reset This Model") {
//                        setOnAction {
//                            find<InsertController>().releaseInsertModel()
//                        }
//                    }
//                    button("Commit All Units") {
//                        setOnAction {
//                            CoroutineScope(Dispatchers.Default).launch { insertModel.commitAllUnits() }
//                        }
//                    }
//                }
//
//            }

            children.style {  backgroundColor += Color.GREEN }
        }

        right = vbox(spacing = 20, alignment = Pos.BASELINE_CENTER) {
            label("COMMITTED UNITS").style { fontSize = 20.px }
            separator()
            add(committedUnits)
        }


        (left as VBox).minWidthProperty().bind(committedUnits.widthProperty())
        (right as VBox).minWidthProperty().bind(uncommittedUnits.widthProperty())
    }
}
