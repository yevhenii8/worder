/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WordBlock.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <05/03/2021, 09:16:44 PM>
 * Version: <15>
 */

package worder.gui.update.model

import javafx.beans.property.ReadOnlyProperty
import javafx.scene.paint.Color
import worder.gui.core.model.WorderStatus
import worder.gui.database.model.DatabaseWord

/**
 * Contract note about WordBlock use:
 * 1) WordBlock should not be able to reset its resolution after receiving one.
 *    Only replacing with another resolution should be allowed until this block is committed by the pipeline.
 */

interface WordBlock {
    val id: String
    val originalWord: DatabaseWord

    val definitions: List<String>
    val examples: List<String>
    val translations: List<String>
    val transcriptions: List<String>

    val statusProperty: ReadOnlyProperty<WordBlockStatus>
    var status: WordBlockStatus

    val resolutionProperty: ReadOnlyProperty<WordBlockResolution>
    val resolution: WordBlockResolution


    suspend fun commit()

    fun update(
            primaryDefinition: String,
            secondaryDefinition: String?,
            transcription: String?,
            examples: List<String>
    )

    fun delete()
    fun learn()
    fun skip()


    enum class WordBlockStatus(override val description: String, override val color: Color) : WorderStatus {
        RESOLUTION_NEEDED("User's action is needed to define a resolution", Color.RED),
        READY_TO_COMMIT("Resolution has been received, but still can be changed", Color.ORANGE),
        COMMITTED("Block has been committed to database, its resolution can NOT be changed", Color.DIMGRAY)
    }

    enum class WordBlockResolution {
        NO_RESOLUTION, SKIPPED, DELETED, LEARNED, UPDATED
    }
}
