/**
 * Stamp was generated by <generateFileStamps.sh>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <MainView.kt>
 * Created: <02/07/2020, 11:27:00 PM>
 * Modified: <16/11/2020, 09:12:58 PM>
 * Version: <49>
 */

package worder.gui.core

import javafx.geometry.Pos
import javafx.scene.layout.BorderPane
import javafx.scene.layout.Priority
import tornadofx.DrawerItem
import tornadofx.View
import tornadofx.borderpane
import tornadofx.c
import tornadofx.drawer
import tornadofx.hbox
import tornadofx.hgrow
import tornadofx.hyperlink
import tornadofx.imageview
import tornadofx.label
import tornadofx.paddingHorizontal
import tornadofx.region
import tornadofx.style
import worder.gui.AppEntry
import worder.gui.database.DatabaseTabView
import worder.gui.insert.InsertTabView
import worder.gui.update.UpdateTabView

class MainView : View("Worder GUI") {
    private lateinit var databaseTab: DrawerItem
    private lateinit var updaterTab: DrawerItem
    private lateinit var inserterTab: DrawerItem


    override val root: BorderPane = borderpane {
        top = find<DatabaseDashboardView>().root.apply {
            style {
                backgroundColor += c("#f5f5f5")
            }
        }
        center = drawer {
            databaseTab = item<DatabaseTabView>(expanded = true)
            updaterTab = item<UpdateTabView>(expanded = false)
            inserterTab = item<InsertTabView>(expanded = false)
        }
        bottom = hbox(alignment = Pos.CENTER) {
            paddingHorizontal = 30

            style {
                backgroundColor += c("#f5f5f5")
            }

            label(AppEntry.worderVersion)
            region {
                hgrow = Priority.ALWAYS
            }
            hyperlink {
                text = "Â© 2020 Yevhenii Nadtochii No Rights Reserved"
                graphic = imageview("/icons/github-icon_24x24.png")
                setOnAction {
                    hostServices.showDocument("https://github.com/yevhenii8/worder")
                }
            }
            region {
                hgrow = Priority.ALWAYS
            }
            hyperlink("Light") {
                setOnAction {
                    tornadofx.error("Not implemented yet")
                }
            }
            label(" | ")
            hyperlink("Dark") {
                setOnAction {
                    tornadofx.error("Not implemented yet")
                }
            }
        }
    }


    fun switchToDatabaseTab() {
        databaseTab.expanded = true
    }

    fun switchToInsertTab() {
        inserterTab.expanded = true
    }

    fun switchToUpdateTab() {
        updaterTab.expanded = true
    }
}
