/**
 * Stamp was generated by <StampedFile.kt>
 * Last time was modified by <StampedFile.kt>
 *
 * Name: <WooordHuntRequesterTest.kt>
 * Created: <03/08/2020, 08:07:28 PM>
 * Modified: <04/08/2020, 07:11:08 PM>
 * Version: <3>
 */

package worder.gui.update.model.impl.requesters

import io.kotest.core.spec.style.ShouldSpec
import kotlinx.coroutines.runBlocking
import worder.gui.core.model.BareWord
import worder.gui.update.model.TranscriptionRequester
import worder.gui.update.model.TranslationRequester

@Suppress("BlockingMethodInNonBlockingContext")
class WooordHuntRequesterTest : ShouldSpec({
    val requester = WooordHuntRequester.instance


    /**
     * FIRST BLOCK = commodity
     */

    should("request the single word1 = commodity") {
        runBlocking {
            requester.requestWord(BareWord("commodity"))
        }
    }

    should("print all the translations of a single word1 = commodity") {
        (requester as TranslationRequester).translations.forEach { println(it) }
    }

    should("print all the transcriptions of a single word1 = commodity") {
        (requester as TranscriptionRequester).transcriptions.forEach { println(it) }
    }


    /**
     * SECOND BLOCK = Bank up
     */

    should("request the compound word2 = Bank up") {
        runBlocking {
            requester.requestWord(BareWord("bank up"))
        }
    }

    should("print all the translations of a compound word2 = Bank up") {
        (requester as TranslationRequester).translations.forEach { println(it) }
    }

    should("print all the transcriptions of a compound word2 = Bank up") {
        (requester as TranscriptionRequester).transcriptions.forEach { println(it) }
    }
})
